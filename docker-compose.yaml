services:
  service_1:
    build:
      context: ./service_1
    container_name: service_1
    expose:
      - "8001"
    networks:
      - appnetwork
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  service_2:
    build:
      context: ./service_2
    container_name: service_2
    expose:
      - "8002"
    networks:
      - appnetwork
    healthcheck:
      test: ["CMD","curl", "-f", "http://localhost:8002/ping"]
      interval: 10s
      timeout: 5s
      retries: 3


  nginx:
    build:
      context: ./nginx
    container_name: nginx
    ports:
      - "8080:80"
    depends_on:
        service_1:
          condition: service_healthy
        service_2:
           condition: service_healthy
    networks:
       - appnetwork

networks: 
    appnetwork: 
      driver: bridge 
 
#build.context: Points to the folder with Dockerfile for that service.

#container_name: Custom name instead of autogenerated.

#expose: Makes port available to other containers (not the host).

#networks: Joins a user-defined bridge network.

#healthcheck: Uses curl to check the /ping route every 10s. 

#ports: Maps container port 80 (default NGINX) to host's 8080.

#depends_on with condition: service_healthy: Waits until the services are healthy before starting.

#networks: All services are on appnetwork so they can communicate using service names like http://service_1.